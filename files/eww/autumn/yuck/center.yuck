(defwidget center []
  (box :orientation "vertical"
       :space-evenly false
    (time)
    (settings)
    (power)))


(defwidget time []
  (box :orientation "vertical"
       :space-evenly false
       :class "blob-box time-box"
    (label :text time :class "time-text")
    (box :orientation "vertical"
         :space-evenly false
         :class "date-box"
      (label :text "Week ${week}" :class "week-text")
      (box :orientation "horizontal"
           :class "day-text-box"
        (for day in weekdata
          (label :text "${day.day}" :class "${day.class}")))
      (label :text date :class "date-text"))))


(defwidget settings []
  (box :orientation "vertical"
       :space-evenly false
       :class "blob-box settings-box"
    (box :orientation "horizontal"
         :class "settings-buttons"
      (qs-tile :active true
               :icon-on "󰛳"
               :icon-off "󰲛"
               :class "ethernet"
               :click "")
      (qs-tile :active true
               :icon-on "󱖏"
               :icon-off "󱖐"
               :class "slime"
               :click "")
      (qs-tile :active true
               :icon-on "󱪈"
               :icon-off "󰌪"
               :class "gpu-power"
               :click "")
      (qs-tile :active false
               :icon-on "󱕶"
               :icon-off "󱟑"
               :class "nightlight"
               :click "")
      (qs-tile :active true
               :icon-on "󰂛"
               :icon-off "󰂚"
               :class "dnd"
               :click ""))
    (qs-tile-slide :active true
                   :value 70
                   :icon-on "󰕾"
                   :icon-off "󰝟"
                   :class "volume"
                   :click ""
                   :apply "")
    (qs-tile-slide :active false
                   :value 0
                   :icon-on "󰍬"
                   :icon-off "󰍭"
                   :class "mic"
                   :click ""
                   :apply "")
    (qs-tile-slide :active true
                   :value 30
                   :icon-on "󱕶"
                   :icon-off "󱟑"
                   :class "nightlight-intensity"
                   :click ""
                   :apply "")))

(defwidget qs-tile [click active icon-on icon-off class]
  (button :onclick click
          :class "qs-tile ${class} ${active ? "active" : "inactive"}"
          :width 100
          :height 100
    (label :text "${active ? icon-on : icon-off}" :class "qs-icon")))

(defwidget qs-tile-slide [click apply value active icon-on icon-off class]
  (box :orientation "horizontal"
       :space-evenly false
       :class "qs-tile-slide"
    (button :onclick click
            :class "qs-tile ${class} ${active ? "active" : "inactive"}"
            :width 60
            :height 60
      (label :text "${active ? icon-on : icon-off}" :class "qs-icon"))
    (scale :hexpand true
           :round-digits 0
           :value value
           :min 0
           :max 100
           :onchange "${apply} {}")))


(defwidget power []
  (box :orientation "horizontal"
       :class "blob-box power-box"
    (button :onclick "" "󰍃")
    (button :onclick "" "")
    (button :onclick "" "󰌾")
    (button :onclick "" "󰐥")))


(defpoll time :interval "10s"
  "date '+%H:%M'")
(defpoll date :interval "60s"
  "date '+%B %Y'")
(defpoll week :interval "60s"
  "date '+%W'")
(defpoll weekdata :interval "60s"
  "python scripts/date.py")
